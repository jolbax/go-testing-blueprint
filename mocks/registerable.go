// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// Registerable is an autogenerated mock type for the Registerable type
type Registerable struct {
	mock.Mock
}

// RegisterRoutes provides a mock function with given fields: engine
func (_m *Registerable) RegisterRoutes(engine *gin.Engine) {
	_m.Called(engine)
}

type mockConstructorTestingTNewRegisterable interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegisterable creates a new instance of Registerable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegisterable(t mockConstructorTestingTNewRegisterable) *Registerable {
	mock := &Registerable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
